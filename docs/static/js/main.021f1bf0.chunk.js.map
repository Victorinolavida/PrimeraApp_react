{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExperApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAIhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfhB,SAACP,GAEzBF,EAAcE,EAAEQ,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAGtCa,QAAQC,IAAIR,GAbS,kBAcdA,GAdc,4CAAH,sDCEL,SAASS,EAAT,GAAyC,EAAlBN,GAAmB,IAAfC,EAAc,EAAdA,MAAOV,EAAO,EAAPA,IAE/C,OACE,sBAAKgB,UAAU,yCAAf,UACE,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,OCDH,IAAMS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECH1B,SAAsBA,GAAW,IAAD,EACnBd,mBAAS,CACjCqB,KAAM,GACNe,SAAS,IAHkC,mBACtCC,EADsC,KAC/BC,EAD+B,KAe7C,OATAC,qBAAU,WACR1B,EAAQC,GAAU0B,MAAK,SAACC,GACtBH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAGZ,CAACtB,IAEGuB,EDV2BK,CAAa5B,GAAjCa,EAFyB,EAE/BN,KAAce,EAFiB,EAEjBA,QAOtB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAW,mBAAGJ,UAAU,oCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACGL,EAAOJ,KAAI,SAACC,GAAD,OACV,cAACO,EAAD,eAA8BP,GAAZA,EAAIC,aEGjBkB,EApBK,WAAa,IAAD,EACM3C,mBAAS,CAAC,cADhB,mBACvBQ,EADuB,KACXT,EADW,KAK9B,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACGS,EAAWe,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCZxB8B,IAASC,OAAO,cAAC,EAAD,IAAiBC,SAASC,eAAe,W","file":"static/js/main.021f1bf0.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setinputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    // console.lo g(e.target.value);\n    setinputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      // console.log(\"Submit hecho\");\n      setCategories((categories) => [inputValue, ...categories]);\n      setinputValue(\"\");\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\n//\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=HPXrl3tp2W89IKZsz5ay8bh4scuctAqN`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  console.log(gifs);\n  return gifs;\n};\n","import React from \"react\";\n\nexport default function GifGridItem({ id, title, url }) {\n  //   console.log(id, title, url);\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport useFetchGifs from \"../hooks/useFetchGifs\";\n// import { useState, useEffect } from \"react\";\n// import { getGifs } from \"../helpers/getGifs\";\nimport GifGridItem from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n  // const [images, setimages] = useState([]);\n  const { data: images, loading } = useFetchGifs(category);\n  // useEffect(() => {\n  //   //esto hace que getGifs solo se ejecute una vez\n  //   getGifs(category).then((gif) => setimages(gif));\n  // }, [category]);\n\n  //   getGifs();\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      {loading && <p className=\" animate__animated animate__flash\">Loading</p>}\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport default function useFetchGifs(category) {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setstate({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state; // {data:[],loading:treu}\n}\n","import { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nconst GifExperApp = function () {\n  const [categories, setCategories] = useState([\"One Punch\"]);\n  //   const handleAdd = () => {\n  // setCategories([...categories, \"Jojos Bizarre Adventure\"]);\n  //   };\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExperApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExperApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExperApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}